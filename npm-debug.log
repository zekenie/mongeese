0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.0.0-alpha-5
3 info using node@v0.10.22
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add spec="." args=[".",null]
7 verbose cache add local package /Users/Nierenberg/Documents/dev/mongeese
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/Nierenberg/.npm/3a52ce78-.lock
10 verbose tar pack [ '/Users/Nierenberg/.npm/mongeese/0.0.1/package.tgz', '.' ]
11 verbose tarball /Users/Nierenberg/.npm/mongeese/0.0.1/package.tgz
12 verbose folder .
13 info prepublish mongeese@0.0.1
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/Nierenberg/.npm/1f1177db-tar.lock
16 silly lockFile f7961494-g-npm-mongeese-0-0-1-package-tgz tar:///Users/Nierenberg/.npm/mongeese/0.0.1/package.tgz
17 verbose lock tar:///Users/Nierenberg/.npm/mongeese/0.0.1/package.tgz /Users/Nierenberg/.npm/f7961494-g-npm-mongeese-0-0-1-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile f7961494-g-npm-mongeese-0-0-1-package-tgz tar:///Users/Nierenberg/.npm/mongeese/0.0.1/package.tgz
21 silly lockFile f7961494-g-npm-mongeese-0-0-1-package-tgz tar:///Users/Nierenberg/.npm/mongeese/0.0.1/package.tgz
22 silly lockFile 3f174bcf-nberg-npm-mongeese-0-0-1-package /Users/Nierenberg/.npm/mongeese/0.0.1/package
23 verbose lock /Users/Nierenberg/.npm/mongeese/0.0.1/package /Users/Nierenberg/.npm/3f174bcf-nberg-npm-mongeese-0-0-1-package.lock
24 silly lockFile 3f174bcf-nberg-npm-mongeese-0-0-1-package /Users/Nierenberg/.npm/mongeese/0.0.1/package
25 silly lockFile 3f174bcf-nberg-npm-mongeese-0-0-1-package /Users/Nierenberg/.npm/mongeese/0.0.1/package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'mongeese',
28 silly publish   version: '0.0.1',
28 silly publish   description: 'Supercharged mongoose Array class',
28 silly publish   main: 'index.js',
28 silly publish   scripts: { test: 'mocha' },
28 silly publish   author:
28 silly publish    { name: 'Zeke Nierenberg',
28 silly publish      email: 'hampzan09@gmail.com',
28 silly publish      url: 'http://zeke.io' },
28 silly publish   license: 'ISC',
28 silly publish   repository: { type: 'git', url: 'http://github.com/zekenie/mongeese.git' },
28 silly publish   dependencies: { async: '^0.9.0', lodash: '^2.4.1', mongoose: '^3.8.17' },
28 silly publish   devDependencies: { 'expect.js': '^0.3.1', mocha: '^1.21.5', sinon: '^1.10.3' },
28 silly publish   readme: '[ ![Codeship Status for zekenie/mongeese](https://www.codeship.io/projects/74397470-39c8-0132-7358-4e57ec3927cd/status)](https://www.codeship.io/projects/42254)\n\n![Dependencies](https://david-dm.org/zekenie/mongeese.png)\n\n# Mongeese\n\nThis library supercharges the [mongoose Array class](http://mongoosejs.com/docs/api.html#types-array-js) by adding some [async functional methods](https://github.com/caolan/async), and some extra goodies.\n\n## Installation\n\n```bash\n$ npm install mongeese --save\n```\n\nBefore you define your models, `require` mongeese. It will modify the prototypes of several mongoose classes, so you can\'t require it after you make your models.\n\n## Async methods\n\nImagine you had a user class with an array of objectId references to kittens. With mongeese, you can do this\n\n```javascript\nvar iterator = function(oneKitten,done) {\n  callback(null,oneKitten.name)\n}\n\nsomeUser.kittens.map(iterator,function(err,kittenNames) {\n  // kitten names -> [\'fluffy\', \'cuddles\', ...]\n})\n```\n\nMongeese will ensure that the path has been [populated](http://mongoosejs.com/docs/populate.html), but will not populate an already populated path.\n\nFunctions available directly from the async library:\n\n- each\n- eachLimit\n- map\n- mapLimit\n- reduce\n- reduceRight\n- sortBy\n- concat\n\n## Invoke\n\nI\'ve added an additional method that async hasn\'t implemented: invoke. Let\'s say you wanted to invoke the `meow` method on all the kittens in a user\'s kittens array.\n\n```javascript\nsomeUser.kittens.invoke(\'meow\',arg1,arg2,callback)\n```\n\nAfter ensuring that the kittens array has been populated, Mongeese will asynchronously call the meow method on each kitten. `invoke` is really a front for async map, so it is assumed that the function you invoke will act sort of like an iterator.\n\n## Development & Contribution\n\nIf you see anything wrong or want a feature, pull requests are welcome. To run the test suite\n\n```bash\n$ npm test\n```',
28 silly publish   readmeFilename: 'readme.md',
28 silly publish   gitHead: '8237d11f4aae5e38bfd3cd1f29b8bd51ebbe8bfe',
28 silly publish   bugs: { url: 'https://github.com/zekenie/mongeese/issues' },
28 silly publish   homepage: 'https://github.com/zekenie/mongeese',
28 silly publish   _id: 'mongeese@0.0.1',
28 silly publish   _shasum: '2cf119dad062031da20fd2f10e0104232cf1622b',
28 silly publish   _from: '.' }
29 verbose mapToRegistry name mongeese
30 verbose mapToRegistry uri https://registry.npmjs.org/mongeese
31 verbose publish registryBase https://registry.npmjs.org/
32 verbose request where is /mongeese
33 verbose request registry https://registry.npmjs.org/
34 verbose request id 6493f776464feb7c
35 verbose request url raw /mongeese
36 verbose request url resolving [ 'https://registry.npmjs.org/', './mongeese' ]
37 verbose request url resolved https://registry.npmjs.org/mongeese
38 verbose request where is https://registry.npmjs.org/mongeese
39 verbose request setting basic auth
40 info trying registry request attempt 1 at 11:02:12
41 http PUT https://registry.npmjs.org/mongeese
42 http 403 https://registry.npmjs.org/mongeese
43 verbose headers { date: 'Sun, 19 Oct 2014 15:02:11 GMT',
43 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
43 verbose headers   'content-type': 'application/json',
43 verbose headers   'cache-control': 'max-age=60',
43 verbose headers   'content-length': '4413',
43 verbose headers   'accept-ranges': 'bytes',
43 verbose headers   via: '1.1 varnish',
43 verbose headers   'x-served-by': 'cache-iad2135-IAD',
43 verbose headers   'x-cache': 'MISS',
43 verbose headers   'x-cache-hits': '0',
43 verbose headers   'x-timer': 'S1413730931.199206,VS0,VE156',
43 verbose headers   'keep-alive': 'timeout=10, max=50',
43 verbose headers   connection: 'Keep-Alive' }
44 error publish Failed PUT 403
45 error Error: forbidden cannot modify pre-existing version: 0.0.1
45 error old={"author":{"name":"Don Park","email":"donpark@docuverse.com","url":"http://blog.docuverse.com"},"name":"mongeese","description":"Mongoose multi-database helper","version":"0.0.1","main":"./index.js","repository":{"type":"git","url":"git://github.com/donpark/mongeese.git"},"engines":{"node":">= v0.4.0"},"dependencies":{"mongoose":">= 1.1.0"},"devDependencies":{},"_npmJsonOpts":{"file":"/Users/don/.npm/mongeese/0.0.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"mongeese@0.0.1","_engineSupported":true,"_npmVersion":"1.0.15","_nodeVersion":"v0.4.9","_defaultsLoaded":true,"dist":{"shasum":"a50688cb3c388e5bc1cf6910ca3515725aff4314","tarball":"http://registry.npmjs.org/mongeese/-/mongeese-0.0.1.tgz"},"scripts":{},"directories":{}}
45 error new={"name":"mongeese","version":"0.0.1","description":"Supercharged mongoose Array class","main":"index.js","scripts":{"test":"mocha"},"author":{"name":"Zeke Nierenberg","email":"hampzan09@gmail.com","url":"http://zeke.io"},"license":"ISC","repository":{"type":"git","url":"http://github.com/zekenie/mongeese.git"},"dependencies":{"async":"^0.9.0","lodash":"^2.4.1","mongoose":"^3.8.17"},"devDependencies":{"expect.js":"^0.3.1","mocha":"^1.21.5","sinon":"^1.10.3"},"readme":"[ ![Codeship Status for zekenie/mongeese](https://www.codeship.io/projects/74397470-39c8-0132-7358-4e57ec3927cd/status)](https://www.codeship.io/projects/42254)\u000a\u000a![Dependencies](https://david-dm.org/zekenie/mongeese.png)\u000a\u000a# Mongeese\u000a\u000aThis library supercharges the [mongoose Array class](http://mongoosejs.com/docs/api.html#types-array-js) by adding some [async functional methods](https://github.com/caolan/async), and some extra goodies.\u000a\u000a## Installation\u000a\u000a```bash\u000a$ npm install mongeese --save\u000a```\u000a\u000aBefore you define your models, `require` mongeese. It will modify the prototypes of several mongoose classes, so you can't require it after you make your models.\u000a\u000a## Async methods\u000a\u000aImagine you had a user class with an array of objectId references to kittens. With mongeese, you can do this\u000a\u000a```javascript\u000avar iterator = function(oneKitten,done) {\u000a  callback(null,oneKitten.name)\u000a}\u000a\u000asomeUser.kittens.map(iterator,function(err,kittenNames) {\u000a  // kitten names -> ['fluffy', 'cuddles', ...]\u000a})\u000a```\u000a\u000aMongeese will ensure that the path has been [populated](http://mongoosejs.com/docs/populate.html), but will not populate an already populated path.\u000a\u000aFunctions available directly from the async library:\u000a\u000a- each\u000a- eachLimit\u000a- map\u000a- mapLimit\u000a- reduce\u000a- reduceRight\u000a- sortBy\u000a- concat\u000a\u000a## Invoke\u000a\u000aI've added an additional method that async hasn't implemented: invoke. Let's say you wanted to invoke the `meow` method on all the kittens in a user's kittens array.\u000a\u000a```javascript\u000asomeUser.kittens.invoke('meow',arg1,arg2,callback)\u000a```\u000a\u000aAfter ensuring that the kittens array has been populated, Mongeese will asynchronously call the meow method on each kitten. `invoke` is really a front for async map, so it is assumed that the function you invoke will act sort of like an iterator.\u000a\u000a## Development & Contribution\u000a\u000aIf you see anything wrong or want a feature, pull requests are welcome. To run the test suite\u000a\u000a```bash\u000a$ npm test\u000a```","readmeFilename":"readme.md","gitHead":"8237d11f4aae5e38bfd3cd1f29b8bd51ebbe8bfe","bugs":{"url":"https://github.com/zekenie/mongeese/issues"},"homepage":"https://github.com/zekenie/mongeese","_id":"mongeese@0.0.1","_shasum":"2cf119dad062031da20fd2f10e0104232cf1622b","_from":".","_npmVersion":"2.0.0-alpha-5","_npmUser":{"name":"zekenie","email":"hampzan09@gmail.com"},"maintainers":[{"name":"zekenie","email":"hampzan09@gmail.com"}],"dist":{"shasum":"2cf119dad062031da20fd2f10e0104232cf1622b","tarball":"http://registry.npmjs.org/mongeese/-/mongeese-0.0.1.tgz"}}: mongeese
45 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:313:14)
45 error     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:251:65)
45 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:123:22)
45 error     at Request.EventEmitter.emit (events.js:98:17)
45 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:893:14)
45 error     at Request.EventEmitter.emit (events.js:117:20)
45 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:844:12)
45 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
45 error     at _stream_readable.js:920:16
45 error     at process._tickCallback (node.js:415:13)
46 error If you need help, you may report this *entire* log,
46 error including the npm and node versions, at:
46 error     <http://github.com/npm/npm/issues>
47 error System Darwin 14.0.0
48 error command "node" "/usr/local/bin/npm" "publish"
49 error cwd /Users/Nierenberg/Documents/dev/mongeese
50 error node -v v0.10.22
51 error npm -v 2.0.0-alpha-5
52 verbose exit [ 1, true ]
